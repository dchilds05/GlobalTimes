{"version":3,"sources":["service/auth-service.js","components/auth/Login.js","components/navbar/NavBar.js","App.js","reportWebVitals.js","index.js"],"names":["authService","axios","create","baseURL","process","withCredentials","Login","props","initialFormState","username","password","useState","formState","updateState","handleChange","event","target","name","value","onSubmit","preventDefault","post","then","res","data","catch","err","console","log","auth","loggedInUser","setLoggedInUser","error","type","onChange","to","NavBar","className","src","alt","toUpperCase","App","useEffect","get","user","_id","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"uPAEMA,E,OAAcC,EAAMC,OAAO,CAC7BC,QAAQ,GAAD,OAAKC,wCAAL,SACPC,iBAAiB,I,mBCAN,SAASC,EAAOC,GAE3B,IAAMC,EAAmB,CAACC,SAAU,GAAIC,SAAU,IAElD,EAAiCC,mBAASH,GAA1C,mBAAOI,EAAP,KAAkBC,EAAlB,KAEA,SAASC,EAAaC,GAClB,MAAsBA,EAAMC,OAArBC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,MACbL,EAAY,2BAAID,GAAL,kBAAiBK,EAAOC,KAkBvC,OACI,gCACI,0DAIA,uCAEA,uBAAMC,SAtBd,SAA2BJ,GACvBA,EAAMK,iBDLd,SAAeX,EAAUC,GACrB,OAAOV,EAAYqB,KAAK,SAAU,CAACZ,WAAUC,aAC5CY,MAAK,SAAAC,GAAG,OAAIA,EAAIC,QAChBC,OAAM,SAAAC,GAAG,OAAEC,QAAQC,IAAIF,MCKpBG,CAF+BjB,EAAvBH,SAAuBG,EAAbF,UAIfY,MAAK,SAAAQ,GACJjB,EAAYL,GACZD,EAAMwB,gBAAgBD,GACtBH,QAAQC,IAAI,mBAAoBE,MAEjCL,OAAM,SAAAO,GAAK,OAAIL,QAAQC,IAAII,OAW1B,UACI,8CAEI,uBAAOC,KAAK,OAAOhB,KAAK,WAAWC,MAAON,EAAUH,SAAUyB,SAAUpB,OACpE,uBAER,8CAEI,uBAAOmB,KAAK,WAAWhB,KAAK,WAAWC,MAAON,EAAUF,SAAUwB,SAAUpB,OACxE,uBAER,wBAAQmB,KAAK,SAAb,wBAGJ,oDAEI,cAAC,IAAD,CAAME,GAAI,UAAV,2BCpDD,SAASC,EAAO7B,GAS3B,OAEI,sBAAK8B,UAAU,SAAf,UACI,qBAAKA,UAAW,UAAhB,SACI,qBAAKA,UAAY,UAAUC,IAAI,kBAAkBC,IAAI,gBAGzD,qBAAKF,UAAW,UAAhB,SACI,gDAGJ,sBAAKA,UAAW,UAAhB,UACI,qBAAKA,UAAY,UAAUC,IAAI,kBAAkBC,IAAI,SACrD,qBAAKF,UAAU,mBAAf,SACK9B,EAAMuB,cAAgB,mBAAGO,UAAW,SAAd,SAAwB9B,EAAMuB,aAAarB,SAAS+B,wBCQhFC,MAzBf,WAEE,IACA,EAAwC9B,mBADd,MAC1B,mBAAOmB,EAAP,KAAqBC,EAArB,KAUA,OARAW,qBAAU,WHYD1C,EAAY2C,IAAI,eACtBrB,MAAK,SAAAC,GAAG,OAAEA,EAAIC,QGXdF,MAAK,SAACsB,GACFA,EAAKC,KAAKd,EAAgBa,QAG9B,CAACd,IAGF,qBAAKO,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAACD,EAAD,CAAQN,aAAcA,IACtB,cAAC,IAAD,UACE,cAAC,IAAD,CAAOgB,OAAK,EAACC,KAAO,IAAIC,OAAQ,SAAAzC,GAAK,OAAI,cAACD,EAAD,2BAAWC,GAAX,IAAkBwB,gBAAiBA,gBCdvEkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB7B,MAAK,YAAkD,IAA/C8B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAAST,OACP,cAAC,IAAMU,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.815b123d.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst authService = axios.create({\n    baseURL: `${process.env.REACT_APP_API_URL}/auth`,\n    withCredentials: true\n})\n\nfunction signup(username, password, country){\n    return authService.post('/signup', {username, password, country} )\n    .then(response => response.data)\n}\n\nfunction login(username, password){\n    return authService.post('/login', {username, password})\n    .then(res => res.data)\n    .catch(err=>console.log(err))\n}\n\nfunction logout(){\n    return authService.get('/logout')\n    .then(res=>res.data)\n}\n\n\nfunction isLoggedIn(){\n    return authService.get('/isloggedin')\n    .then(res=>res.data)\n}\nexport { authService, signup, login, logout, isLoggedIn}","import React, {useState} from \"react\"\nimport {Link} from 'react-router-dom'\nimport * as auth from \"./../../service/auth-service\"\n\nexport default function Login (props) {\n\n    const initialFormState = {username: \"\", password: \"\"}\n\n    const [formState, updateState] = useState(initialFormState);\n\n    function handleChange(event){\n        const {name, value} = event.target;\n        updateState({...formState, [name]: value});\n    }\n\n \n    function handleFormSubmit (event) {\n        event.preventDefault();\n        const { username, password } = formState;\n     \n        auth\n          .login(username, password)\n          .then(loggedInUser => {\n            updateState(initialFormState);\n            props.setLoggedInUser(loggedInUser);\n            console.log(\"logged in user: \", loggedInUser)\n          })\n          .catch(error => console.log(error));\n      };\n\n    return (\n        <div>\n            <h1>\n               Already have an account?\n            </h1>\n\n            <p>Log in</p>\n\n            <form onSubmit={handleFormSubmit}>\n                <label>\n                    Username:\n                    <input type=\"text\" name=\"username\" value={formState.username} onChange={handleChange} />\n                </label><br></br>\n        \n                <label>\n                    Password:\n                    <input type=\"password\" name=\"password\" value={formState.password} onChange={handleChange} />\n                </label><br></br>\n        \n                <button type=\"submit\"> Login </button>\n            </form>\n \n            <p>\n                Don't have account?\n                <Link to={'/signup'}> Signup</Link>\n            </p>\n        </div>\n    )\n}","import React from \"react\"\n\nexport default function NavBar(props) {\n\n    /*if(props.loggedInUser.username){\n        const capitalName = \"\";\n        for (let i=0; i<capitalName.length; i++){\n            if(\n        }\n    }*/\n\n    return (\n\n        <div className=\"navBar\">\n            <div className= \"navDiv1\">\n                <img className = \"navImg1\" src=\"./hamburger.png\" alt=\"hamburger\"/>\n            </div>\n\n            <div className= \"navDiv2\">\n                <h1>Global Times</h1>\n            </div>\n           \n            <div className= \"navDiv3\">\n                <img className = \"navImg2\" src=\"./userPhoto.png\" alt=\"user\"/>\n                <div className=\"navRightSmallDiv\">\n                    {props.loggedInUser && <p className= \"navPar\">{props.loggedInUser.username.toUpperCase()}</p>}\n                </div>\n                \n            </div>\n        </div>\n    )\n}","import './App.css';\nimport React, {useState, useEffect} from \"react\"\nimport {BrowserRouter, Switch, Route} from \"react-router-dom\"\nimport * as auth from \"./service/auth-service\"\nimport Login from \"./components/auth/Login\"\nimport NavBar from \"./components/navbar/NavBar\"\n\n\nfunction App() {\n\n  const initialLoginState = null;\n  const [loggedInUser, setLoggedInUser] = useState(initialLoginState)\n\n  useEffect(() => {\n    const response = auth.isLoggedIn()\n    .then((user) => {\n      if(user._id) setLoggedInUser(user)\n    })\n    \n  }, [loggedInUser])\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <NavBar loggedInUser={loggedInUser}/>\n        <Switch>\n          <Route exact path = \"/\" render={props => <Login {...props} setLoggedInUser={setLoggedInUser}/>}/>\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}